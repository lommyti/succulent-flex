{"version":3,"sources":["Leaf.js","RoundLeaf.js","Cactus.js","Rock.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Leaf","adjustment","paddingTop","Math","min","pow","this","props","leafNum","width","max","transform","random","zIndex","animationDelay","tipWidth","opacity","react_default","a","createElement","className","style","src","Component","RoundLeaf","Cactus","Rock","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","rockColors","rockNum","background","parseInt","marginLeft","marginTop","borderRadius","App","leaves","leaves2","roundleaves","rocks","cactus","start","makeLeaves","makeRoundLeaves","makeRocks","makeCactus","temp","temp2","setState","i","push","src_Leaf","key","src_RoundLeaf","src_Cactus","src_Rock","_this2","dist_default","loop","speed","onClick","setSandbox","Delay","ms","renderCactusBase","renderButton","renderFinished","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.2c99c555.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nclass Leaf extends Component {\n  render() {\n    const adjustment = {\n      paddingTop: Math.min(Math.pow(this.props.leafNum, 1.2), 35) + \"px\",\n      width: Math.max(Math.pow(this.props.leafNum, 0.85), 15) + \"px\",\n      transform:\n        \"rotate(\" +\n        (8 * Math.random() + this.props.leafNum * 34) +\n        \"deg) translate(0,\" +\n        Math.pow(this.props.leafNum, 1.2) / 2 +\n        \"px)\",\n      zIndex: -this.props.leafNum,\n      animationDelay: this.props.leafNum / 10 + \"s\"\n    };\n    const tipWidth = {\n      width: Math.max(Math.pow(this.props.leafNum, 0.85), 15) + \"px\",\n      opacity: Math.min(this.props.leafNum - 5, 1)\n    };\n    return (\n      <div className=\"leaf-container\">\n        <div className=\"leaf\" style={adjustment}>\n          <img src=\"/succulent-flex/img/pinktip.png\" style={tipWidth} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Leaf;\n","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nclass RoundLeaf extends Component {\r\n  render() {\r\n    const adjustment = {\r\n      paddingTop: (Math.max(this.props.leafNum, 15)/2) + \"px\",\r\n      width: Math.max(this.props.leafNum, 15) + \"px\",\r\n      transform: \"rotate(-\" + ((8*Math.random())+ (this.props.leafNum * 80))  + \"deg) translate(0,\" + Math.pow(this.props.leafNum, 1.2)/2 + \"px)\",\r\n      zIndex: -this.props.leafNum,\r\n      animationDelay: this.props.leafNum/10 + \"s\"\r\n    }\r\n    return (\r\n      <div className=\"leaf-container\">\r\n      <div className=\"leaf roundleaf\" style={adjustment}>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RoundLeaf;\r\n","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nclass Cactus extends Component {\r\n  render() {\r\n    const adjustment = {\r\n      transform: \"rotate(-\" +  (this.props.leafNum * 45)  + \"deg) translate(0,\" + this.props.leafNum + \"px)\",\r\n      zIndex: -this.props.leafNum,\r\n      animationDelay: this.props.leafNum/10 + \"s\"\r\n    }\r\n    return (\r\n      <div className=\"leaf-container\">\r\n      <div className=\"leaf cactus\" style={adjustment}>\r\n        <div className=\"cactus-inside\"></div>\r\n        <div className=\"cactus-line cactus-line-1\"></div>\r\n        <div className=\"cactus-line cactus-line-2\"></div>\r\n        <div className=\"cactus-line cactus-line-3\"></div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cactus;\r\n","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nclass Rock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rockColors:['#E4DED8', '#8e8a8b', '#d5a672', '#929697', '#9d7969', '#986a6d']\r\n    }\r\n  }\r\n  render() {\r\n    const adjustment = {\r\n      paddingTop: (Math.max(this.props.rockNum, 15)/2) + \"px\",\r\n      width: (this.props.rockNum + 5) + \"px\",\r\n      transform: \"rotate(-\" + ((8*Math.random())+ (this.props.rockNum * 55))  + \"deg) translate(0,\" + Math.pow(this.props.rockNum, 1.2)/2 + \"px)\",\r\n      zIndex: -this.props.rockNum,\r\n      background: this.state.rockColors[parseInt(7*Math.random())],\r\n      marginLeft: (500*Math.random()) + \"px\",\r\n      marginTop: (340*Math.random()) + \"px\",\r\n      borderRadius: ((5*Math.random()) + 2) + \"px \" + (5*Math.random()) + \"px \" + ((5*Math.random()) + 2) + \"px \" + (5*Math.random()) + \"px\",\r\n    }\r\n    return (\r\n      <div className=\"rock\" style={adjustment}>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Rock;\r\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Leaf from \"./Leaf\";\nimport RoundLeaf from \"./RoundLeaf\";\nimport Cactus from \"./Cactus\";\nimport Rock from \"./Rock\";\nimport Typing from \"react-typing-animation\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      leaves: [],\n      leaves2: [],\n      roundleaves: [],\n      rocks: [],\n      cactus: [],\n      start: \"false\"\n    };\n  }\n\n  setSandbox() {\n    this.makeLeaves();\n    this.makeRoundLeaves();\n    this.makeRocks();\n    this.makeCactus();\n  }\n\n  makeLeaves() {\n    var temp = [];\n    var temp2 = [];\n    this.setState({ leaves: temp });\n    this.setState({ leaves2: temp2 });\n    for (let i = 0; i < 40; i++) {\n      if (i > 15 || i % 2 != 0) {\n        temp.push(<Leaf key={i} leafNum={i} />);\n      }\n    }\n    this.setState({ leaves: temp });\n    for (let i = 0; i < 50; i++) {\n      if (i > 15 || i % 2 != 0) {\n        temp2.push(<Leaf key={i} leafNum={i} />);\n      }\n    }\n    this.setState({ leaves2: temp2 });\n    this.setState({ start: \"true\" });\n  }\n\n  makeRoundLeaves() {\n    var temp = [];\n    this.setState({ roundleaves: temp });\n    for (let i = 0; i < 35; i++) {\n      if (i > 15 || i % 2 != 0) {\n        temp.push(<RoundLeaf key={i} leafNum={i} />);\n      }\n    }\n    this.setState({ roundleaves: temp });\n  }\n\n  makeCactus() {\n    var temp = [];\n    this.setState({ cactus: temp });\n    for (let i = 0; i < 40; i++) {\n      if (i > 15 || i % 2 != 0) {\n        temp.push(<Cactus key={i} leafNum={i} />);\n      }\n    }\n    this.setState({ cactus: temp });\n  }\n\n  makeRocks() {\n    var temp = [];\n    this.setState({ rocks: temp });\n    for (let i = 0; i < 500; i++) {\n      temp.push(<Rock key={i} rockNum={(i % 6) + 7} />);\n    }\n    this.setState({ rocks: temp });\n  }\n\n  renderButton() {\n    if (this.state.start == \"false\") {\n      return (\n        <Typing loop=\"true\" speed={80}>\n          <button onClick={() => this.setSandbox()}>\n            {\" \"}\n            YOU COME ACROSS A BARREN AND SANDY PLAIN. CLICK HERE TO GROW THIS\n            GARDEN{\" \"}\n          </button>\n          <Typing.Delay ms={10000} />\n        </Typing>\n      );\n    } else {\n      return;\n    }\n  }\n\n  renderFinished() {\n    if (this.state.start == \"false\") {\n      return;\n    } else {\n      return <button> WOULD YOU LOOK AT THAT! IT CAME TO LIFE! </button>;\n    }\n  }\n\n  renderCactusBase() {\n    if (this.state.start == \"false\") {\n      return;\n    } else {\n      return <div className=\"cactus-base\" />;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h3>SUCCULENT SANDBOX</h3>\n        <div className=\"sandbox\">\n          <div className=\"rocks\">{this.state.rocks}</div>\n          <div className=\"leaves\">{this.state.leaves}</div>\n          <div className=\"leaves2\">{this.state.leaves2}</div>\n          <div className=\"roundleaves\">{this.state.roundleaves}</div>\n          <div className=\"cacti\">\n            {this.renderCactusBase()}\n            <div className=\"cactus-inside-container\">{this.state.cactus}</div>\n          </div>\n        </div>\n        {this.renderButton()}\n        {this.renderFinished()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}